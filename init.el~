;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  -*- coding: utf-8-unix -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; マクロサーチパスの追加
;; 例えば、~/.emacs.d/local 以下にユーザ用の *.el, *.elc を置けます。
;; (add-to-list 'load-path "~/.emacs.d/local")
;; (add-to-list 'load-path "~/lib/emacs")
;; (add-to-list 'load-path "~/.emacs.d/auto-install"
;;-------------------------------------------------------------------------;;
;;C-x C-e でinit.elの設定反映(ショートカットC-f12)
;;-------------------------------------------------------------------------;;
;; パスの設定は、絶対パスで行う。
;; 相対パスでもうまく行く。ただし「../」のような表記だとうまく行かない


hoge
hoge
home


;;-------------------------------------------------------------------------;;
;; load-pathの追加関数
;;emacs-lispのファイルを読み込むパスを設定
(defun add-to-load-path (&rest paths)
  (let (path)
    (dolist (path paths paths)
      (let ((default-directory (expand-file-name (concat user-emacs-directory path))))
        (add-to-list 'load-path default-directory)
        (if (fboundp 'normal-top-level-add-subdirs-to-load-path)
            (normal-top-level-add-subdirs-to-load-path))))))

;; load-pathに追加するフォルダ
;; 2つ以上フォルダを指定する場合の引数 => (add-to-load-path "elisp" "xxx" "xxx")
(add-to-load-path "elisp")
;;-------------------------------------------------------------------------;;

;;-------------------------------------------------------------------------;;
;;init-loaderの設定、設定ファイルを分割して読み込む
(require 'init-loader)
(init-loader-load "~/.emacs.d/myconf")
;;-------------------------------------------------------------------------;;

;;-------------------------------------------------------------------------;;
;;auto-installの設定
;;elispをインストール時.elファイルを自動でbyte-compile(.elを.elc化)
;;パスの通ったファイルへ自動配置
;;インストール後にC-c C-cで実行
(require 'auto-install)
;;インストールディレクトリの設定
(setq auto-install-directory "~/.emacs.d/elisp/")
;;(auto-install-update-emacswiki-package-name t)
(auto-install-compatibility-setup)
;;-------------------------------------------------------------------------;;

















;; ;;-------------------------------------------------------------------------;;
;; ;;goモード
;; ;;-------------------------------------------------------------------------;;
;; (require 'go-mode-load)
;; (add-hook 'go-mode-hook
;;           '(lambda()
;;             (setq c-basic-offset 4)
;;             (setq indent-tabs-mode t)
;;             (local-set-key (kbd "M-.") 'godef-jump)
;;             (local-set-key (kbd "C-c C-r") 'go-remove-unused-imports)
;;             (local-set-key (kbd "C-c i") 'go-goto-imports)
;;             (local-set-key (kbd "C-c d") 'godoc)))
;; ;;-------------------------------------------------------------------------;;




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
